3a4
> # SOURCEGRAPH CUSTOMIZATIONS CONTAIN "# SG CUSTOM" in the comment
41,46c42,47
< #data_directory = 'ConfigDir'		# use data in another directory
< 					# (change requires restart)
< #hba_file = 'ConfigDir/pg_hba.conf'	# host-based authentication file
< 					# (change requires restart)
< #ident_file = 'ConfigDir/pg_ident.conf'	# ident configuration file
< 					# (change requires restart)
---
> #data_directory = 'ConfigDir'        # use data in another directory
>                     # (change requires restart)
> #hba_file = 'ConfigDir/pg_hba.conf'    # host-based authentication file
>                     # (change requires restart)
> #ident_file = 'ConfigDir/pg_ident.conf'    # ident configuration file
>                     # (change requires restart)
49,50c50,51
< #external_pid_file = ''			# write an extra PID file
< 					# (change requires restart)
---
> #external_pid_file = ''            # write an extra PID file
>                     # (change requires restart)
60,74c61,75
< 					# comma-separated list of addresses;
< 					# defaults to 'localhost'; use '*' for all
< 					# (change requires restart)
< #port = 5432				# (change requires restart)
< max_connections = 100			# (change requires restart)
< #superuser_reserved_connections = 3	# (change requires restart)
< #unix_socket_directories = '/var/run/postgresql'	# comma-separated list of directories
< 					# (change requires restart)
< #unix_socket_group = ''			# (change requires restart)
< #unix_socket_permissions = 0777		# begin with 0 to use octal notation
< 					# (change requires restart)
< #bonjour = off				# advertise server via Bonjour
< 					# (change requires restart)
< #bonjour_name = ''			# defaults to the computer name
< 					# (change requires restart)
---
>                     # comma-separated list of addresses;
>                     # defaults to 'localhost'; use '*' for all
>                     # (change requires restart)
> #port = 5432                # (change requires restart)
> max_connections = 100            # (change requires restart)
> #superuser_reserved_connections = 3    # (change requires restart)
> #unix_socket_directories = '/var/run/postgresql'    # comma-separated list of directories
>                     # (change requires restart)
> #unix_socket_group = ''            # (change requires restart)
> #unix_socket_permissions = 0777        # begin with 0 to use octal notation
>                     # (change requires restart)
> #bonjour = off                # advertise server via Bonjour
>                     # (change requires restart)
> #bonjour_name = ''            # defaults to the computer name
>                     # (change requires restart)
76c77
< # - TCP settings -
---
> # - TCP Keepalives -
79,86c80,85
< #tcp_keepalives_idle = 0		# TCP_KEEPIDLE, in seconds;
< 					# 0 selects the system default
< #tcp_keepalives_interval = 0		# TCP_KEEPINTVL, in seconds;
< 					# 0 selects the system default
< #tcp_keepalives_count = 0		# TCP_KEEPCNT;
< 					# 0 selects the system default
< #tcp_user_timeout = 0			# TCP_USER_TIMEOUT, in milliseconds;
< 					# 0 selects the system default
---
> #tcp_keepalives_idle = 0        # TCP_KEEPIDLE, in seconds;
>                     # 0 selects the system default
> #tcp_keepalives_interval = 0        # TCP_KEEPINTVL, in seconds;
>                     # 0 selects the system default
> #tcp_keepalives_count = 0        # TCP_KEEPCNT;
>                     # 0 selects the system default
90,91c89,90
< #authentication_timeout = 1min		# 1s-600s
< #password_encryption = md5		# md5 or scram-sha-256
---
> #authentication_timeout = 1min        # 1s-600s
> #password_encryption = md5        # md5 or scram-sha-256
95c94
< #krb_server_keyfile = 'FILE:${sysconfdir}/krb5.keytab'
---
> #krb_server_keyfile = ''
108,109d106
< #ssl_min_protocol_version = 'TLSv1'
< #ssl_max_protocol_version = ''
121,127c118,124
< shared_buffers = 128MB			# min 128kB
< 					# (change requires restart)
< #huge_pages = try			# on, off, or try
< 					# (change requires restart)
< #temp_buffers = 8MB			# min 800kB
< #max_prepared_transactions = 0		# zero disables the feature
< 					# (change requires restart)
---
> shared_buffers = 1GB # SG CUSTOM min 128kB
>                     # (change requires restart)
> #huge_pages = try            # on, off, or try
>                     # (change requires restart)
> #temp_buffers = 8MB            # min 800kB
> #max_prepared_transactions = 0        # zero disables the feature
>                     # (change requires restart)
130,146c127,138
< #work_mem = 4MB				# min 64kB
< #maintenance_work_mem = 64MB		# min 1MB
< #autovacuum_work_mem = -1		# min 1MB, or -1 to use maintenance_work_mem
< #max_stack_depth = 2MB			# min 100kB
< #shared_memory_type = mmap		# the default is the first option
< 					# supported by the operating system:
< 					#   mmap
< 					#   sysv
< 					#   windows
< 					# (change requires restart)
< dynamic_shared_memory_type = posix	# the default is the first option
< 					# supported by the operating system:
< 					#   posix
< 					#   sysv
< 					#   windows
< 					#   mmap
< 					# (change requires restart)
---
> work_mem = 5MB                # SG CUSTOM min 64kB
> maintenance_work_mem = 250MB        # SG CUSTOM min 1MB
> #autovacuum_work_mem = -1        # min 1MB, or -1 to use maintenance_work_mem
> #max_stack_depth = 2MB            # min 100kB
> dynamic_shared_memory_type = posix    # the default is the first option
>                     # supported by the operating system:
>                     #   posix
>                     #   sysv
>                     #   windows
>                     #   mmap
>                     # use none to disable dynamic shared memory
>                     # (change requires restart)
150,151c142,143
< #temp_file_limit = -1			# limits per-process temp file space
< 					# in kB, or -1 for no limit
---
> temp_file_limit = 20GB        # SG CUSTOM limits per-process temp file space
>                     # in kB, or -1 for no limit
155,156c147,148
< #max_files_per_process = 1000		# min 25
< 					# (change requires restart)
---
> #max_files_per_process = 1000        # min 25
>                     # (change requires restart)
160,164c152,156
< #vacuum_cost_delay = 0			# 0-100 milliseconds (0 disables)
< #vacuum_cost_page_hit = 1		# 0-10000 credits
< #vacuum_cost_page_miss = 10		# 0-10000 credits
< #vacuum_cost_page_dirty = 20		# 0-10000 credits
< #vacuum_cost_limit = 200		# 1-10000 credits
---
> #vacuum_cost_delay = 0            # 0-100 milliseconds
> #vacuum_cost_page_hit = 1        # 0-10000 credits
> #vacuum_cost_page_miss = 10        # 0-10000 credits
> #vacuum_cost_page_dirty = 20        # 0-10000 credits
> #vacuum_cost_limit = 200        # 1-10000 credits
168,171c160,164
< #bgwriter_delay = 200ms			# 10-10000ms between rounds
< #bgwriter_lru_maxpages = 100		# max buffers written/round, 0 disables
< #bgwriter_lru_multiplier = 2.0		# 0-10.0 multiplier on buffers scanned/round
< #bgwriter_flush_after = 512kB		# measured in pages, 0 disables
---
> bgwriter_delay = 50ms # SG CUSTOM 10-10000ms between rounds
> bgwriter_lru_maxpages = 200        # SG CUSTOM max buffers written/round, 0 disables
> 
> #bgwriter_lru_multiplier = 2.0        # 0-10.0 multiplier on buffers scanned/round
> #bgwriter_flush_after = 512kB        # measured in pages, 0 disables
175,178c168,171
< #effective_io_concurrency = 1		# 1-1000; 0 disables prefetching
< #max_worker_processes = 8		# (change requires restart)
< #max_parallel_maintenance_workers = 2	# taken from max_parallel_workers
< #max_parallel_workers_per_gather = 2	# taken from max_parallel_workers
---
> effective_io_concurrency = 200        # 1-1000; 0 disables prefetching
> max_worker_processes = 4        # SG CUSTOM (change requires restart)
> max_parallel_maintenance_workers = 4    # SG CUSTOM taken from max_parallel_workers
> max_parallel_workers_per_gather = 2    # SG CUSTOM taken from max_parallel_workers
180,184c173,177
< #max_parallel_workers = 8		# maximum number of max_worker_processes that
< 					# can be used in parallel operations
< #old_snapshot_threshold = -1		# 1min-60d; -1 disables; 0 is immediate
< 					# (change requires restart)
< #backend_flush_after = 0		# measured in pages, 0 disables
---
> max_parallel_workers = 4        # SG CUSTOM maximum number of max_worker_processes that
>                     # can be used in parallel operations
> #old_snapshot_threshold = -1        # 1min-60d; -1 disables; 0 is immediate
>                     # (change requires restart)
> #backend_flush_after = 0        # measured in pages, 0 disables
193,216c186,207
< #wal_level = replica			# minimal, replica, or logical
< 					# (change requires restart)
< #fsync = on				# flush data to disk for crash safety
< 					# (turning this off can cause
< 					# unrecoverable data corruption)
< #synchronous_commit = on		# synchronization level;
< 					# off, local, remote_write, remote_apply, or on
< #wal_sync_method = fsync		# the default is the first option
< 					# supported by the operating system:
< 					#   open_datasync
< 					#   fdatasync (default on Linux and FreeBSD)
< 					#   fsync
< 					#   fsync_writethrough
< 					#   open_sync
< #full_page_writes = on			# recover from partial page writes
< #wal_compression = off			# enable compression of full-page writes
< #wal_log_hints = off			# also do full page writes of non-critical updates
< 					# (change requires restart)
< #wal_init_zero = on			# zero-fill new WAL files
< #wal_recycle = on			# recycle WAL files
< #wal_buffers = -1			# min 32kB, -1 sets based on shared_buffers
< 					# (change requires restart)
< #wal_writer_delay = 200ms		# 1-10000 milliseconds
< #wal_writer_flush_after = 1MB		# measured in pages, 0 disables
---
> #wal_level = replica            # minimal, replica, or logical
>                     # (change requires restart)
> #fsync = on                # flush data to disk for crash safety
>                     # (turning this off can cause
>                     # unrecoverable data corruption)
> #synchronous_commit = on        # synchronization level;
>                     # off, local, remote_write, remote_apply, or on
> #wal_sync_method = fsync        # the default is the first option
>                     # supported by the operating system:
>                     #   open_datasync
>                     #   fdatasync (default on Linux)
>                     #   fsync
>                     #   fsync_writethrough
>                     #   open_sync
> #full_page_writes = on            # recover from partial page writes
> #wal_compression = off            # enable compression of full-page writes
> #wal_log_hints = off            # also do full page writes of non-critical updates
>                     # (change requires restart)
> wal_buffers = 16MB        # SG CUSTOM min 32kB, -1 sets based on shared_buffers
>                     # (change requires restart)
> #wal_writer_delay = 200ms        # 1-10000 milliseconds
> #wal_writer_flush_after = 1MB        # measured in pages, 0 disables
218,219c209,210
< #commit_delay = 0			# range 0-100000, in microseconds
< #commit_siblings = 5			# range 1-1000
---
> #commit_delay = 0            # range 0-100000, in microseconds
> #commit_siblings = 5            # range 1-1000
223,228c214,219
< #checkpoint_timeout = 5min		# range 30s-1d
< max_wal_size = 1GB
< min_wal_size = 80MB
< #checkpoint_completion_target = 0.5	# checkpoint target duration, 0.0 - 1.0
< #checkpoint_flush_after = 256kB		# measured in pages, 0 disables
< #checkpoint_warning = 30s		# 0 disables
---
> #checkpoint_timeout = 5min        # range 30s-1d
> max_wal_size = 8GB      # SG CUSTOM
> min_wal_size = 2GB      # SG CUSTOM
> #checkpoint_completion_target = 0.5    # checkpoint target duration, 0.0 - 1.0
> #checkpoint_flush_after = 256kB        # measured in pages, 0 disables
> #checkpoint_warning = 30s        # 0 disables
232,275c223,230
< #archive_mode = off		# enables archiving; off, on, or always
< 				# (change requires restart)
< #archive_command = ''		# command to use to archive a logfile segment
< 				# placeholders: %p = path of file to archive
< 				#               %f = file name only
< 				# e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
< #archive_timeout = 0		# force a logfile segment switch after this
< 				# number of seconds; 0 disables
< 
< # - Archive Recovery -
< 
< # These are only used in recovery mode.
< 
< #restore_command = ''		# command to use to restore an archived logfile segment
< 				# placeholders: %p = path of file to restore
< 				#               %f = file name only
< 				# e.g. 'cp /mnt/server/archivedir/%f %p'
< 				# (change requires restart)
< #archive_cleanup_command = ''	# command to execute at every restartpoint
< #recovery_end_command = ''	# command to execute at completion of recovery
< 
< # - Recovery Target -
< 
< # Set these only when performing a targeted recovery.
< 
< #recovery_target = ''		# 'immediate' to end recovery as soon as a
<                                 # consistent state is reached
< 				# (change requires restart)
< #recovery_target_name = ''	# the named restore point to which recovery will proceed
< 				# (change requires restart)
< #recovery_target_time = ''	# the time stamp up to which recovery will proceed
< 				# (change requires restart)
< #recovery_target_xid = ''	# the transaction ID up to which recovery will proceed
< 				# (change requires restart)
< #recovery_target_lsn = ''	# the WAL LSN up to which recovery will proceed
< 				# (change requires restart)
< #recovery_target_inclusive = on # Specifies whether to stop:
< 				# just after the specified recovery target (on)
< 				# just before the recovery target (off)
< 				# (change requires restart)
< #recovery_target_timeline = 'latest'	# 'current', 'latest', or timeline ID
< 				# (change requires restart)
< #recovery_target_action = 'pause'	# 'pause', 'promote', 'shutdown'
< 				# (change requires restart)
---
> #archive_mode = off        # enables archiving; off, on, or always
>                 # (change requires restart)
> #archive_command = ''        # command to use to archive a logfile segment
>                 # placeholders: %p = path of file to archive
>                 #               %f = file name only
>                 # e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
> #archive_timeout = 0        # force a logfile segment switch after this
>                 # number of seconds; 0 disables
286,294c241,249
< #max_wal_senders = 10		# max number of walsender processes
< 				# (change requires restart)
< #wal_keep_segments = 0		# in logfile segments; 0 disables
< #wal_sender_timeout = 60s	# in milliseconds; 0 disables
< 
< #max_replication_slots = 10	# max number of replication slots
< 				# (change requires restart)
< #track_commit_timestamp = off	# collect timestamp of transaction commit
< 				# (change requires restart)
---
> #max_wal_senders = 10        # max number of walsender processes
>                 # (change requires restart)
> #wal_keep_segments = 0        # in logfile segments; 0 disables
> #wal_sender_timeout = 60s    # in milliseconds; 0 disables
> 
> #max_replication_slots = 10    # max number of replication slots
>                 # (change requires restart)
> #track_commit_timestamp = off    # collect timestamp of transaction commit
>                 # (change requires restart)
300,304c255,259
< #synchronous_standby_names = ''	# standby servers that provide sync rep
< 				# method to choose sync standbys, number of sync standbys,
< 				# and comma-separated list of application_name
< 				# from standby(s); '*' = all
< #vacuum_defer_cleanup_age = 0	# number of xacts by which cleanup is delayed
---
> #synchronous_standby_names = ''    # standby servers that provide sync rep
>                 # method to choose sync standbys, number of sync standbys,
>                 # and comma-separated list of application_name
>                 # from standby(s); '*' = all
> #vacuum_defer_cleanup_age = 0    # number of xacts by which cleanup is delayed
310,332c265,281
< #primary_conninfo = ''			# connection string to sending server
< 					# (change requires restart)
< #primary_slot_name = ''			# replication slot on sending server
< 					# (change requires restart)
< #promote_trigger_file = ''		# file name whose presence ends recovery
< #hot_standby = on			# "off" disallows queries during recovery
< 					# (change requires restart)
< #max_standby_archive_delay = 30s	# max delay before canceling queries
< 					# when reading WAL from archive;
< 					# -1 allows indefinite delay
< #max_standby_streaming_delay = 30s	# max delay before canceling queries
< 					# when reading streaming WAL;
< 					# -1 allows indefinite delay
< #wal_receiver_status_interval = 10s	# send replies at least this often
< 					# 0 disables
< #hot_standby_feedback = off		# send info from standby to prevent
< 					# query conflicts
< #wal_receiver_timeout = 60s		# time that receiver waits for
< 					# communication from master
< 					# in milliseconds; 0 disables
< #wal_retrieve_retry_interval = 5s	# time to wait before retrying to
< 					# retrieve WAL after a failed attempt
< #recovery_min_apply_delay = 0		# minimum delay for applying changes during recovery
---
> #hot_standby = on            # "off" disallows queries during recovery
>                     # (change requires restart)
> #max_standby_archive_delay = 30s    # max delay before canceling queries
>                     # when reading WAL from archive;
>                     # -1 allows indefinite delay
> #max_standby_streaming_delay = 30s    # max delay before canceling queries
>                     # when reading streaming WAL;
>                     # -1 allows indefinite delay
> #wal_receiver_status_interval = 10s    # send replies at least this often
>                     # 0 disables
> #hot_standby_feedback = off        # send info from standby to prevent
>                     # query conflicts
> #wal_receiver_timeout = 60s        # time that receiver waits for
>                     # communication from master
>                     # in milliseconds; 0 disables
> #wal_retrieve_retry_interval = 5s    # time to wait before retrying to
>                     # retrieve WAL after a failed attempt
338,340c287,289
< #max_logical_replication_workers = 4	# taken from max_worker_processes
< 					# (change requires restart)
< #max_sync_workers_per_subscription = 2	# taken from max_logical_replication_workers
---
> #max_logical_replication_workers = 4    # taken from max_worker_processes
>                     # (change requires restart)
> #max_sync_workers_per_subscription = 2    # taken from max_logical_replication_workers
368,383c317,332
< #seq_page_cost = 1.0			# measured on an arbitrary scale
< #random_page_cost = 4.0			# same scale as above
< #cpu_tuple_cost = 0.01			# same scale as above
< #cpu_index_tuple_cost = 0.005		# same scale as above
< #cpu_operator_cost = 0.0025		# same scale as above
< #parallel_tuple_cost = 0.1		# same scale as above
< #parallel_setup_cost = 1000.0	# same scale as above
< 
< #jit_above_cost = 100000		# perform JIT compilation if available
< 					# and query more expensive than this;
< 					# -1 disables
< #jit_inline_above_cost = 500000		# inline small functions if query is
< 					# more expensive than this; -1 disables
< #jit_optimize_above_cost = 500000	# use expensive JIT optimizations if
< 					# query is more expensive than this;
< 					# -1 disables
---
> #seq_page_cost = 1.0            # measured on an arbitrary scale
> random_page_cost = 1.1            # SG CUSTOM same scale as above
> #cpu_tuple_cost = 0.01            # same scale as above
> #cpu_index_tuple_cost = 0.005        # same scale as above
> #cpu_operator_cost = 0.0025        # same scale as above
> #parallel_tuple_cost = 0.1        # same scale as above
> #parallel_setup_cost = 1000.0    # same scale as above
> 
> #jit_above_cost = 100000        # perform JIT compilation if available
>                     # and query more expensive than this;
>                     # -1 disables
> #jit_inline_above_cost = 500000        # inline small functions if query is
>                     # more expensive than this; -1 disables
> #jit_optimize_above_cost = 500000    # use expensive JIT optimizations if
>                     # query is more expensive than this;
>                     # -1 disables
387c336
< #effective_cache_size = 4GB
---
> effective_cache_size = 3GB # SG CUSTOM
393,397c342,346
< #geqo_effort = 5			# range 1-10
< #geqo_pool_size = 0			# selects default based on effort
< #geqo_generations = 0			# selects default based on effort
< #geqo_selection_bias = 2.0		# range 1.5-2.0
< #geqo_seed = 0.0			# range 0.0-1.0
---
> #geqo_effort = 5            # range 1-10
> #geqo_pool_size = 0            # selects default based on effort
> #geqo_generations = 0            # selects default based on effort
> #geqo_selection_bias = 2.0        # range 1.5-2.0
> #geqo_seed = 0.0            # range 0.0-1.0
401,403c350,352
< #default_statistics_target = 100	# range 1-10000
< #constraint_exclusion = partition	# on, off, or partition
< #cursor_tuple_fraction = 0.1		# range 0.0-1.0
---
> #default_statistics_target = 100    # range 1-10000
> #constraint_exclusion = partition    # on, off, or partition
> #cursor_tuple_fraction = 0.1        # range 0.0-1.0
405,406c354,355
< #join_collapse_limit = 8		# 1 disables collapsing of explicit
< 					# JOIN clauses
---
> #join_collapse_limit = 8        # 1 disables collapsing of explicit
>                     # JOIN clauses
408,410c357
< #jit = on				# allow JIT compilation
< #plan_cache_mode = auto			# auto, force_generic_plan or
< 					# force_custom_plan
---
> #jit = off                # allow JIT compilation
419,422c366,369
< #log_destination = 'stderr'		# Valid values are combinations of
< 					# stderr, csvlog, syslog, and eventlog,
< 					# depending on platform.  csvlog
< 					# requires logging_collector to be on.
---
> #log_destination = 'stderr'        # Valid values are combinations of
>                     # stderr, csvlog, syslog, and eventlog,
>                     # depending on platform.  csvlog
>                     # requires logging_collector to be on.
425,428c372,375
< #logging_collector = off		# Enable capturing of stderr and csvlog
< 					# into log files. Required to be on for
< 					# csvlogs.
< 					# (change requires restart)
---
> #logging_collector = off        # Enable capturing of stderr and csvlog
>                     # into log files. Required to be on for
>                     # csvlogs.
>                     # (change requires restart)
431,449c378,396
< #log_directory = 'log'			# directory where log files are written,
< 					# can be absolute or relative to PGDATA
< #log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'	# log file name pattern,
< 					# can include strftime() escapes
< #log_file_mode = 0600			# creation mode for log files,
< 					# begin with 0 to use octal notation
< #log_truncate_on_rotation = off		# If on, an existing log file with the
< 					# same name as the new log file will be
< 					# truncated rather than appended to.
< 					# But such truncation only occurs on
< 					# time-driven rotation, not on restarts
< 					# or size-driven rotation.  Default is
< 					# off, meaning append to existing files
< 					# in all cases.
< #log_rotation_age = 1d			# Automatic rotation of logfiles will
< 					# happen after that time.  0 disables.
< #log_rotation_size = 10MB		# Automatic rotation of logfiles will
< 					# happen after that much log output.
< 					# 0 disables.
---
> #log_directory = 'log'            # directory where log files are written,
>                     # can be absolute or relative to PGDATA
> #log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'    # log file name pattern,
>                     # can include strftime() escapes
> #log_file_mode = 0600            # creation mode for log files,
>                     # begin with 0 to use octal notation
> #log_truncate_on_rotation = off        # If on, an existing log file with the
>                     # same name as the new log file will be
>                     # truncated rather than appended to.
>                     # But such truncation only occurs on
>                     # time-driven rotation, not on restarts
>                     # or size-driven rotation.  Default is
>                     # off, meaning append to existing files
>                     # in all cases.
> #log_rotation_age = 1d            # Automatic rotation of logfiles will
>                     # happen after that time.  0 disables.
> #log_rotation_size = 10MB        # Automatic rotation of logfiles will
>                     # happen after that much log output.
>                     # 0 disables.
463,498c410,442
< #log_min_messages = warning		# values in order of decreasing detail:
< 					#   debug5
< 					#   debug4
< 					#   debug3
< 					#   debug2
< 					#   debug1
< 					#   info
< 					#   notice
< 					#   warning
< 					#   error
< 					#   log
< 					#   fatal
< 					#   panic
< 
< #log_min_error_statement = error	# values in order of decreasing detail:
< 					#   debug5
< 					#   debug4
< 					#   debug3
< 					#   debug2
< 					#   debug1
< 					#   info
< 					#   notice
< 					#   warning
< 					#   error
< 					#   log
< 					#   fatal
< 					#   panic (effectively off)
< 
< #log_min_duration_statement = -1	# -1 is disabled, 0 logs all statements
< 					# and their durations, > 0 logs only
< 					# statements running at least this number
< 					# of milliseconds
< 
< #log_transaction_sample_rate = 0.0	# Fraction of transactions whose statements
< 					# are logged regardless of their duration. 1.0 logs all
< 					# statements from all transactions, 0.0 never logs.
---
> #log_min_messages = warning        # values in order of decreasing detail:
>                     #   debug5
>                     #   debug4
>                     #   debug3
>                     #   debug2
>                     #   debug1
>                     #   info
>                     #   notice
>                     #   warning
>                     #   error
>                     #   log
>                     #   fatal
>                     #   panic
> 
> #log_min_error_statement = error    # values in order of decreasing detail:
>                     #   debug5
>                     #   debug4
>                     #   debug3
>                     #   debug2
>                     #   debug1
>                     #   info
>                     #   notice
>                     #   warning
>                     #   error
>                     #   log
>                     #   fatal
>                     #   panic (effectively off)
> 
> #log_min_duration_statement = -1    # -1 is disabled, 0 logs all statements
>                     # and their durations, > 0 logs only
>                     # statements running at least this number
>                     # of milliseconds
> 
510c454
< #log_error_verbosity = default		# terse, default, or verbose messages
---
> #log_error_verbosity = default        # terse, default, or verbose messages
512,534c456,478
< #log_line_prefix = '%m [%p] '		# special values:
< 					#   %a = application name
< 					#   %u = user name
< 					#   %d = database name
< 					#   %r = remote host and port
< 					#   %h = remote host
< 					#   %p = process ID
< 					#   %t = timestamp without milliseconds
< 					#   %m = timestamp with milliseconds
< 					#   %n = timestamp with milliseconds (as a Unix epoch)
< 					#   %i = command tag
< 					#   %e = SQL state
< 					#   %c = session ID
< 					#   %l = session line number
< 					#   %s = session start timestamp
< 					#   %v = virtual transaction ID
< 					#   %x = transaction ID (0 if none)
< 					#   %q = stop here in non-session
< 					#        processes
< 					#   %% = '%'
< 					# e.g. '<%u%%%d> '
< #log_lock_waits = off			# log lock waits >= deadlock_timeout
< #log_statement = 'none'			# none, ddl, mod, all
---
> #log_line_prefix = '%m [%p] '        # special values:
>                     #   %a = application name
>                     #   %u = user name
>                     #   %d = database name
>                     #   %r = remote host and port
>                     #   %h = remote host
>                     #   %p = process ID
>                     #   %t = timestamp without milliseconds
>                     #   %m = timestamp with milliseconds
>                     #   %n = timestamp with milliseconds (as a Unix epoch)
>                     #   %i = command tag
>                     #   %e = SQL state
>                     #   %c = session ID
>                     #   %l = session line number
>                     #   %s = session start timestamp
>                     #   %v = virtual transaction ID
>                     #   %x = transaction ID (0 if none)
>                     #   %q = stop here in non-session
>                     #        processes
>                     #   %% = '%'
>                     # e.g. '<%u%%%d> '
> #log_lock_waits = off            # log lock waits >= deadlock_timeout
> #log_statement = 'none'            # none, ddl, mod, all
536,539c480,483
< #log_temp_files = -1			# log temporary files equal or larger
< 					# than the specified size in kilobytes;
< 					# -1 disables, 0 logs all temp files
< log_timezone = 'UTC'
---
> #log_temp_files = -1            # log temporary files equal or larger
>                     # than the specified size in kilobytes;
>                     # -1 disables, 0 logs all temp files
> log_timezone = 'Etc/UTC'
545,546c489,490
< #cluster_name = ''			# added to process titles if nonempty
< 					# (change requires restart)
---
> #cluster_name = ''            # added to process titles if nonempty
>                     # (change requires restart)
559,560c503,504
< #track_functions = none			# none, pl, all
< #track_activity_query_size = 1024	# (change requires restart)
---
> #track_functions = none            # none, pl, all
> #track_activity_query_size = 1024    # (change requires restart)
576,601c520,545
< #autovacuum = on			# Enable autovacuum subprocess?  'on'
< 					# requires track_counts to also be on.
< #log_autovacuum_min_duration = -1	# -1 disables, 0 logs all actions and
< 					# their durations, > 0 logs only
< 					# actions running at least this number
< 					# of milliseconds.
< #autovacuum_max_workers = 3		# max number of autovacuum subprocesses
< 					# (change requires restart)
< #autovacuum_naptime = 1min		# time between autovacuum runs
< #autovacuum_vacuum_threshold = 50	# min number of row updates before
< 					# vacuum
< #autovacuum_analyze_threshold = 50	# min number of row updates before
< 					# analyze
< #autovacuum_vacuum_scale_factor = 0.2	# fraction of table size before vacuum
< #autovacuum_analyze_scale_factor = 0.1	# fraction of table size before analyze
< #autovacuum_freeze_max_age = 200000000	# maximum XID age before forced vacuum
< 					# (change requires restart)
< #autovacuum_multixact_freeze_max_age = 400000000	# maximum multixact age
< 					# before forced vacuum
< 					# (change requires restart)
< #autovacuum_vacuum_cost_delay = 2ms	# default vacuum cost delay for
< 					# autovacuum, in milliseconds;
< 					# -1 means use vacuum_cost_delay
< #autovacuum_vacuum_cost_limit = -1	# default vacuum cost limit for
< 					# autovacuum, -1 means use
< 					# vacuum_cost_limit
---
> #autovacuum = on            # Enable autovacuum subprocess?  'on'
>                     # requires track_counts to also be on.
> #log_autovacuum_min_duration = -1    # -1 disables, 0 logs all actions and
>                     # their durations, > 0 logs only
>                     # actions running at least this number
>                     # of milliseconds.
> #autovacuum_max_workers = 3        # max number of autovacuum subprocesses
>                     # (change requires restart)
> #autovacuum_naptime = 1min        # time between autovacuum runs
> #autovacuum_vacuum_threshold = 50    # min number of row updates before
>                     # vacuum
> #autovacuum_analyze_threshold = 50    # min number of row updates before
>                     # analyze
> #autovacuum_vacuum_scale_factor = 0.2    # fraction of table size before vacuum
> #autovacuum_analyze_scale_factor = 0.1    # fraction of table size before analyze
> #autovacuum_freeze_max_age = 200000000    # maximum XID age before forced vacuum
>                     # (change requires restart)
> #autovacuum_multixact_freeze_max_age = 400000000    # maximum multixact age
>                     # before forced vacuum
>                     # (change requires restart)
> #autovacuum_vacuum_cost_delay = 20ms    # default vacuum cost delay for
>                     # autovacuum, in milliseconds;
>                     # -1 means use vacuum_cost_delay
> #autovacuum_vacuum_cost_limit = -1    # default vacuum cost limit for
>                     # autovacuum, -1 means use
>                     # vacuum_cost_limit
610,620c554,564
< #client_min_messages = notice		# values in order of decreasing detail:
< 					#   debug5
< 					#   debug4
< 					#   debug3
< 					#   debug2
< 					#   debug1
< 					#   log
< 					#   notice
< 					#   warning
< 					#   error
< #search_path = '"$user", public'	# schema names
---
> #client_min_messages = notice        # values in order of decreasing detail:
>                     #   debug5
>                     #   debug4
>                     #   debug3
>                     #   debug2
>                     #   debug1
>                     #   log
>                     #   notice
>                     #   warning
>                     #   error
> #search_path = '"$user", public'    # schema names
622,625c566,568
< #default_tablespace = ''		# a tablespace name, '' uses the default
< #temp_tablespaces = ''			# a list of tablespace names, '' uses
< 					# only default tablespace
< #default_table_access_method = 'heap'
---
> #default_tablespace = ''        # a tablespace name, '' uses the default
> #temp_tablespaces = ''            # a list of tablespace names, '' uses
>                     # only default tablespace
631,633c574,576
< #statement_timeout = 0			# in milliseconds, 0 is disabled
< #lock_timeout = 0			# in milliseconds, 0 is disabled
< #idle_in_transaction_session_timeout = 0	# in milliseconds, 0 is disabled
---
> #statement_timeout = 0            # in milliseconds, 0 is disabled
> #lock_timeout = 0            # in milliseconds, 0 is disabled
> #idle_in_transaction_session_timeout = 0    # in milliseconds, 0 is disabled
638,641c581,584
< #vacuum_cleanup_index_scale_factor = 0.1	# fraction of total number of tuples
< 						# before index cleanup, 0 always performs
< 						# index cleanup
< #bytea_output = 'hex'			# hex, escape
---
> #vacuum_cleanup_index_scale_factor = 0.1    # fraction of total number of tuples
>                         # before index cleanup, 0 always performs
>                         # index cleanup
> #bytea_output = 'hex'            # hex, escape
651c594
< timezone = 'UTC'
---
> timezone = 'Etc/UTC'
653,662c596,604
< 					# abbreviations.  Currently, there are
< 					#   Default
< 					#   Australia (historical usage)
< 					#   India
< 					# You can create your own file in
< 					# share/timezonesets/.
< #extra_float_digits = 1			# min -15, max 3; any value >0 actually
< 					# selects precise output mode
< #client_encoding = sql_ascii		# actually, defaults to database
< 					# encoding
---
>                     # abbreviations.  Currently, there are
>                     #   Default
>                     #   Australia (historical usage)
>                     #   India
>                     # You can create your own file in
>                     # share/timezonesets/.
> #extra_float_digits = 0            # min -15, max 3
> #client_encoding = sql_ascii        # actually, defaults to database
>                     # encoding
665,669c607,611
< lc_messages = 'en_US.utf8'			# locale for system error message
< 					# strings
< lc_monetary = 'en_US.utf8'			# locale for monetary formatting
< lc_numeric = 'en_US.utf8'			# locale for number formatting
< lc_time = 'en_US.utf8'				# locale for time formatting
---
> lc_messages = 'en_US.utf8'            # locale for system error message
>                     # strings
> lc_monetary = 'en_US.utf8'            # locale for monetary formatting
> lc_numeric = 'en_US.utf8'            # locale for number formatting
> lc_time = 'en_US.utf8'                # locale for time formatting
676c618
< #shared_preload_libraries = ''	# (change requires restart)
---
> #shared_preload_libraries = ''    # (change requires restart)
679c621
< #jit_provider = 'llvmjit'		# JIT library to use
---
> #jit_provider = 'llvmjit'        # JIT library to use
691,697c633,639
< #max_locks_per_transaction = 64		# min 10
< 					# (change requires restart)
< #max_pred_locks_per_transaction = 64	# min 10
< 					# (change requires restart)
< #max_pred_locks_per_relation = -2	# negative values mean
< 					# (max_pred_locks_per_transaction
< 					#  / -max_pred_locks_per_relation) - 1
---
> #max_locks_per_transaction = 64        # min 10
>                     # (change requires restart)
> #max_pred_locks_per_transaction = 64    # min 10
>                     # (change requires restart)
> #max_pred_locks_per_relation = -2    # negative values mean
>                     # (max_pred_locks_per_transaction
>                     #  / -max_pred_locks_per_relation) - 1
708c650,651
< #backslash_quote = safe_encoding	# on, off, or safe_encoding
---
> #backslash_quote = safe_encoding    # on, off, or safe_encoding
> #default_with_oids = off
725,729c668,672
< #exit_on_error = off			# terminate session on any error?
< #restart_after_crash = on		# reinitialize after backend crash?
< #data_sync_retry = off			# retry or panic on failure to fsync
< 					# data?
< 					# (change requires restart)
---
> #exit_on_error = off            # terminate session on any error?
> #restart_after_crash = on        # reinitialize after backend crash?
> #data_sync_retry = off            # retry or panic on failure to fsync
>                     # data?
>                     # (change requires restart)
737,738c680
< # default postgresql.conf.  Note that these are directives, not variable
< # assignments, so they can usefully be given more than once.
---
> # default postgresql.conf.
740,743c682,685
< #include_dir = '...'			# include files ending in '.conf' from
< 					# a directory, e.g., 'conf.d'
< #include_if_exists = '...'		# include file only if it exists
< #include = '...'			# include file
---
> #include_dir = ''            # include files ending in '.conf' from
>                     # a directory, e.g., 'conf.d'
> #include_if_exists = ''            # include file only if it exists
> #include = ''                # include file
750,752c692
< # Add settings for extensions here
< 
< max_connections = 240			# SRC_PGSQL_MAX_OPEN=30 for 8 containers
---
> # Add settings for extensions here
\ No newline at end of file
