---
meta:
  productName: "deploy-sourcegraph-docker"
  owners:
    - "@sourcegraph/release"
  repository: "github.com/sourcegraph/deploy-sourcegraph-docker"
inputs:
  - releaseId: server
requirements:
  - name: "go"
    cmd: "which go"
    fixInstructions: "install golang"
  - name: "GitHub cli exists"
    cmd: "which gh"
    fixInstructions: "install GitHub cli"
internal:
  create:
    steps:
      patch:
          - name: docker(compose):tags
            cmd: |
              set -e
              registry=us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal
              sg ops update-images --registry ${registry} --kind compose --pin-tag {{tag}} docker-compose/
          - name: docker(shell):tags
            cmd: |
              set -e
              registry=us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal
              sg ops update-images --registry ${registry} --kind shell --pin-tag {{tag}} pure-docker/
          - name: "git:branch"
            cmd: |
              set -e
              branch="internal/release-{{version}}"
              git switch -c "${branch}"
              git commit -am 'release_patch: {{version}}' -m '{{config}}'
              git push origin ${branch}
          - name: "gh"
            cmd: |
              gh pr create \
                --fill \
                --title "(internal) release_patch: build {{version}}" \
                --body "Test plan: automated release PR, CI will perform additional checks" 
      minor:
          - name: docker(compose):tags
            cmd: |
              set -e
              registry=us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal
              sg ops update-images --registry ${registry} --kind compose --pin-tag {{tag}} docker-compose/
          - name: docker(shell):tags
            cmd: |
              set -e
              registry=us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal
              sg ops update-images --registry ${registry} --kind shell --pin-tag {{tag}} pure-docker/
          - name: "git:branch"
            cmd: |
              set -e
              branch="internal/release-{{version}}"
              git switch -c "${branch}"
              git commit -am 'release_minor: {{version}}' -m '{{config}}'
              git push origin ${branch}
          - name: "gh"
            cmd: |
              gh pr create \
                --fill \
                --title "(internal) release_minor: build {{version}}" \
                --body "Test plan: automated release PR, CI will perform additional checks"
      major:
          - name: docker(compose):tags
            cmd: |
              set -e
              registry=us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal
              sg ops update-images --registry ${registry} --kind compose --pin-tag {{tag}} docker-compose/
          - name: docker(shell):tags
            cmd: |
              set -e
              registry=us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal
              sg ops update-images --registry ${registry} --kind shell --pin-tag {{tag}} pure-docker/
          - name: "git:branch"
            cmd: |
              set -e
              branch="internal/release-{{version}}"
              git switch -c "${branch}"
              git commit -am 'release_major: {{version}}' -m '{{config}}'
              git push origin ${branch}
          - name: "gh"
            cmd: |
              gh pr create \
                --fill \
                --title "(internal) release_major: build {{version}}" \
                --body "Test plan: automated release PR, CI will perform additional checks"
  finalize:
    steps:
      - name: "git:finalize"
        cmd: |
          set -e
          branch="release-{{version}}"
          git switch -c "${branch}"
          echo "pushing branch ${branch}"
          git push origin "${branch}"
          git checkout -
test:
  steps:
    - name: "Placeholder"
      cmd: |
        echo "Test"

promoteToPublic:
  create:
    steps:
      - name: docker(compose):tags
        cmd: |
          set -e
          registry=us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-public
          sg ops update-images --registry ${registry} --kind compose --pin-tag {{tag}} docker-compose/
      - name: docker(shell):tags
        cmd: |
          set -e
          registry=us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-public
          sg ops update-images --registry ${registry} --kind shell --pin-tag {{tag}} pure-docker/
      - name: "git:branch"
        cmd: |
          branch="promote/release-{{version}}"
          git switch -c "${branch}"
          git commit -am 'promote-release: {{version}}' -m '{{config}}'
          git push origin "${branch}"
      - name: "github:pr"
        cmd: |
          set -e
          branch="internal/release-{{version}}"
          # we need to fetch from origin just in case this branch doesn't exist locally, so that the PR can find the base
          git fetch origin "${branch}"
          gh pr create \
            --fill \
            --title "(promote) release: build {{version}}" \
            --base "${branch}" \
            --body "Test plan: automated release PR, CI will perform additional checks"
  finalize:
    steps:
      - name: git:tag
        cmd: |
          set -e
          branch="promote/release-{{version}}"
          git checkout "${branch}"
          # TODO remove after QA
          git tag QA-{{version}}
          git push origin ${branch} --tags
